class car:
    def __init__(self, car_ID, Reg_Num, manufacturer, model_type, sipp_code, max_seating_capacity, width, length, max_speed, mpg, on_hire, largest_car_ID):
        self.car_ID = car_ID
        self.Reg_Num = Reg_Num
        self.manufacturer = manufacturer
        self.model_type = model_type
        self.sipp_code = sipp_code
        self.max_seating_capacity = max_seating_capacity
        self.width = width
        self.length = length
        self.max_speed = max_speed
        self.mpg = mpg
        self.on_hire = on_hire



        if not isinstance(self.manufacturer.upper, str) or len(self.manufacturer.upper) > 20:
            raise ValueError('Manufacturer must be less than 25')
        if len(self.model_type) > 20:
            raise ValueError('Model name must be less than 25 characters')
        if self.max_seating_capacity < 1 or self.max_seating_capacity > 11:
            raise ValueError('The maximum seating capacity must be between 1 and 10')
        if self.width < 1000 or self.width > 2501:
            raise ValueError("The car's width must be between 1600mm and 2100mm")
        if self.length < 1000 or self.length > 10001:
            raise ValueError("The car's length must be between 1000mm and 10000mm")
        if self.mpg < 5 or self.mpg > 80:
            raise ValueError("The car's MPG must be between 5 and 80")
        if self.sipp_code < 4 or self.sipp_code > 4:
            raise ValueError ('Sipp Code is incorrect')
        if self.max_speed <30 or self.max_speed > 310:
            raise ValueError("The car's max speed has to be between 30 and 310mph")
        if self.Reg_Num < 2 or self.Reg_Num > 10:
            raise ValueError("The car's number plate has to be between 2 and 10 characters")
        if not isinstance(self.car_ID, int):
            raise ValueError('Car ID must be a number')

    def __str__(self):
        return f"{self.car_ID} {self.Reg_Num} {self.manufacturer} {self.model_type} {self.sipp_code} {self.max_seating_capacity} {self.width} {self.length} {self.max_speed} {self.mpg} {self.on_hire}"

def largest_car_ID:
    

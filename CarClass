class car:
    MIN_NUM_OF_SEATS = 1
    MAX_NUM_OF_SEATS = 10
    MAX_WIDTH = 2500
    MIN_WIDTH = 1000
    MAX_LENGTH = 10000
    MIN_LENGTH = 1000
    MAX_MPG = 80
    MIN_MGP = 5
    MAX_MAX_SPEED = 310
    MIN_MAX_SPEED = 30
    def __init__(self, car_ID, Reg_Num, manufacturer, model_type, sipp_code, max_seating_capacity, width, length,
                 max_speed, mpg, on_hire, largest_car_ID):
        self.car_ID = car_ID
        self.Reg_Num = Reg_Num
        self.manufacturer = manufacturer
        self.model_type = model_type
        self.sipp_code = sipp_code
        self.max_seating_capacity = max_seating_capacity
        self.width = width
        self.length = length
        self.max_speed = max_speed
        self.mpg = mpg
        self.on_hire = on_hire

    def __str__(self):
        return f"{self.car_ID} {self.Reg_Num} {self.manufacturer} {self.model_type} {self.sipp_code} {self.max_seating_capacity} {self.width} {self.length} {self.max_speed} {self.mpg} {self.on_hire}"
    @property
    def Reg_Num(self):
        return self._Reg_Num
    @Reg_Num.setter
    def Reg_Num(self,Reg_Num):
        self._Reg_Num = Reg_Num

    @property
    def manufacturer(self):
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        self._manufacturer = manufacturer

    @property
    def model_type(self):
        return self._model_type
    @model_type.setter
    def model_type(self, model):
        self._model_type = model

    @property
    def sipp_code(self):
        return self._sipp_code
    @sipp_code.setter
    def sipp_code(self, sipp_code):
        self._sipp_code = sipp_code

    @property
    def max_seating_capacity(self):
        return self._max_seating_capacity

    @max_seating_capacity.setter
    def max_seating_capacity(self, seat_capacity):
        if car.MIN_NUM_OF_SEATS <= seat_capacity <= car.MAX_NUM_OF_SEATS:
            self._max_seat_capacity = seat_capacity
        else:
            self._max_seat_capacity = 0
            print('Invalid number of seats')
    @property
    def width(self):
        return self._width
    @width.setter
    def width(self, width):
        if car.MIN_WIDTH <= width <= car.MAX_WIDTH:
        self._width = width

    @property
    def length(self):
        return self._length
    @length.setter
    def length(self, length):
        if car.MIN_LENGTH <= length <= car.MAX_LENGTH:
        self._length = length
    @property
    def max_speed(self):
        return self._max_speed
    @max_speed.setter
    def max_speed(self, max_speed):
        if car.MIN_MAX_SPEED <= max_speed <= car.MAX_MAX_SPEED:
        self._max_speed = max_speed

    @property
    def mpg(self):
        return self._mpg
    @mpg.setter
    def mpg(self, mpg):
        if car.MIN_MGP <= mpg <=car.MAX_MPG:
        self._mpg = mpg
